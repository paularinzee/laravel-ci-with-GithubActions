name: Laravel deployment with GithubAction
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # phpstan:
  #   name: phpstan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
 
  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '8.2'
  #         coverage: none
 
  #     - name: Install composer dependencies
  #       run: composer install -n --prefer-dist
 
  #     - name: Run Static Analysis
  #       run: ./vendor/bin/phpstan --error-format=github
  # tests:
  #   name: Run tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
 
  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '8.2'
  #         extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
  #         coverage: none
 
  #     - name: Run composer install
  #       run: composer install -n --prefer-dist
 
  #     - name: Prepare Laravel Application
  #       run: |
  #         cp .env.ci .env
  #         php artisan key:generate
 
  #     - name: Run tests
  #       run: php artisan test
  tests:
    name: Run test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          # MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: vendor
        key: composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          composer-

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1

    - name: Install composer dependencies
      run: |
        composer install --no-scripts

    - name: Prepare Laravel Application
      run: |
        cp .env.ci .env
        php artisan key:generate

    - name: Run Test suite
      run: php artisan test 
    env:
      DB_DATABASE: test